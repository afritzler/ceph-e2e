name: Run e2e tests

on:
  pull_request:
    types: [labeled, synchronize, reopened]
    paths-ignore:
      - 'docs/**'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'e2e-tests')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - uses: azure/setup-kubectl@v3

      - uses: azure/setup-helm@v3
        with:
          version: 'v3.12.2'

      - name: Update APT and install ceph libs
        run: |
          sudo apt-get update
          sudo apt-get install -y libcephfs-dev librbd-dev librados-dev

      - name: Start minikube
        uses: medyagh/setup-minikube@latest
        id: minikube
        with:
          cpus: 2
          memory: 4096m
          cni: bridge
          start-args: '--disk-size=40g --extra-disks 1'
      - name: Install Rook Operator
        run: |
          kubectl apply -f https://raw.githubusercontent.com/rook/rook/v1.10.11/deploy/examples/crds.yaml
          kubectl apply -f https://raw.githubusercontent.com/rook/rook/v1.10.11/deploy/examples/common.yaml
          kubectl apply -f https://raw.githubusercontent.com/rook/rook/v1.10.11/deploy/examples/operator.yaml
          kubectl wait --for=condition=ready --timeout=60s pod -n rook-ceph -l app=rook-ceph-operator
      - name: Verify Rook CRDs installation
        run: |
          end=$((SECONDS+20))  # 20 seconds timeout
          while [ $SECONDS -lt $end ]; do
            if kubectl get crds | grep -q 'cephclusters.ceph.rook.io'; then
              echo "Rook CRDs have been installed!"
              exit 0
            fi
            echo "Waiting for Rook CRDs to be installed..."
            sleep 10
          done
          
          echo "Timeout waiting for Rook CRDs!"
          exit 1

      - name: Apply CephCluster configuration
        run: |
          cat <<EOF | kubectl apply -f - 
          apiVersion: ceph.rook.io/v1
          kind: CephCluster
          metadata:
            name: my-cluster
            namespace: rook-ceph
          spec:
            dataDirHostPath: /var/lib/rook
            mon:
              count: 1
              allowMultiplePerNode: true
              volumeClaimTemplate:
                spec:
                  storageClassName: standard
                  resources:
                    requests:
                      storage: 10Gi
            cephVersion:
              image: quay.io/ceph/ceph:v17.2.6
              allowUnsupported: false
            dashboard:
              enabled: true
            network:
              hostNetwork: true
            storage:
              storageClassDeviceSets:
                - name: set1
                  count: 1
                  portable: false
                  volumeClaimTemplates:
                    - metadata:
                        name: data
                      spec:
                        resources:
                          requests:
                            storage: 10Gi
                        storageClassName: standard
                        volumeMode: Block
                        accessModes:
                          - ReadWriteOnce
          EOF
          kubectl apply -f https://raw.githubusercontent.com/onmetal/cephlet/main/docs/development/rook/pool.yaml

      - name: Wait for CephCluster to be healthy or warning
        run: |
          echo "Waiting for CephCluster to be healthy or in warning status..."
          while true; do
          kubectl -n rook-ceph get pods 
          HEALTH_STATUS=$(kubectl -n rook-ceph get cephcluster -o jsonpath='{.items[0].status.ceph.health}')
          echo "CephCluster health status: $HEALTH_STATUS"
          if [[ "$HEALTH_STATUS" == "HEALTH_OK" || "$HEALTH_STATUS" == "HEALTH_WARN" ]]; then
            kubectl -n rook-ceph get pods
            kubectl -n rook-ceph logs -l app=rook-ceph-osd-prepare
            break
          fi
          sleep 30
          done
          echo "CephCluster is in acceptable state!"

      - name: Wait for CephCluster to become ready
        run: |
          kubectl wait --for=condition=ready --timeout=60s pod -n rook-ceph -l app=rook-ceph-mon
          kubectl wait --for=condition=ready --timeout=60s cephcluster -n rook-ceph my-cluster
          sleep 30
          kubectl -n rook-ceph logs -l app=rook-ceph-operator
          sleep 30
          kubectl -n rook-ceph logs -l app=rook-ceph-operator
          kubectl wait --for=condition=ready --timeout=60s cephblockpool -n rook-ceph cephlet-pool

      - name: Set Environment Variables
        run: |
          echo "CEPH_USERNAME=admin" >> $GITHUB_ENV
          echo "CEPH_POOLNAME=cephlet-pool" >> $GITHUB_ENV
          echo "CEPH_CLIENTNAME=client.cephlet-pool" >> $GITHUB_ENV
          keyring=$(kubectl -n rook-ceph get secret rook-ceph-admin-keyring -o jsonpath={.data.keyring})
          echo "CEPH_KEY=$keyring" >> $GITHUB_ENV
          mon=$(kubectl -n rook-ceph get cm rook-ceph-mon-endpoints -o jsonpath={.data.data})
          echo "CEPH_MONITORS=$(echo $mon | sed 's/^[^0-9[]*//')" >> $GITHUB_ENV

      - name: Run tests
        run: E2E_TESTS=true CGO=1 go test ./...
